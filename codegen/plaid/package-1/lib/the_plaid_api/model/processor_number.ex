# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.ProcessorNumber do
  @moduledoc """
  An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned.
  """

  @derive [Poison.Encoder]
  defstruct [
    :ach,
    :eft,
    :international,
    :bacs
  ]

  @type t :: %__MODULE__{
    :ach => ThePlaidAPI.Model.NumbersAchNullable.t | nil,
    :eft => ThePlaidAPI.Model.NumbersEftNullable.t | nil,
    :international => ThePlaidAPI.Model.NumbersInternationalNullable.t | nil,
    :bacs => ThePlaidAPI.Model.NumbersBacsNullable.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.ProcessorNumber do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:ach, :struct, ThePlaidAPI.Model.NumbersAchNullable, options)
    |> deserialize(:eft, :struct, ThePlaidAPI.Model.NumbersEftNullable, options)
    |> deserialize(:international, :struct, ThePlaidAPI.Model.NumbersInternationalNullable, options)
    |> deserialize(:bacs, :struct, ThePlaidAPI.Model.NumbersBacsNullable, options)
  end
end

