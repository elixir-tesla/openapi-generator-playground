# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.InstitutionStatus do
  @moduledoc """
  The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.  Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment. 
  """

  @derive [Poison.Encoder]
  defstruct [
    :item_logins,
    :transactions_updates,
    :auth,
    :identity,
    :investments_updates,
    :liabilities_updates,
    :liabilities,
    :investments,
    :health_incidents
  ]

  @type t :: %__MODULE__{
    :item_logins => ThePlaidAPI.Model.ProductStatus.t | nil,
    :transactions_updates => ThePlaidAPI.Model.ProductStatus.t | nil,
    :auth => ThePlaidAPI.Model.ProductStatus.t | nil,
    :identity => ThePlaidAPI.Model.ProductStatus.t | nil,
    :investments_updates => ThePlaidAPI.Model.ProductStatus.t | nil,
    :liabilities_updates => ThePlaidAPI.Model.ProductStatus.t | nil,
    :liabilities => ThePlaidAPI.Model.ProductStatus.t | nil,
    :investments => ThePlaidAPI.Model.ProductStatus.t | nil,
    :health_incidents => [ThePlaidAPI.Model.HealthIncident.t] | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.InstitutionStatus do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:item_logins, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:transactions_updates, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:auth, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:identity, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:investments_updates, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:liabilities_updates, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:liabilities, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:investments, :struct, ThePlaidAPI.Model.ProductStatus, options)
    |> deserialize(:health_incidents, :list, ThePlaidAPI.Model.HealthIncident, options)
  end
end

