# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.Institution do
  @moduledoc """
  Details relating to a specific financial institution
  """

  @derive [Poison.Encoder]
  defstruct [
    :institution_id,
    :name,
    :products,
    :country_codes,
    :url,
    :primary_color,
    :logo,
    :routing_numbers,
    :dtc_numbers,
    :oauth,
    :status,
    :payment_initiation_metadata,
    :auth_metadata
  ]

  @type t :: %__MODULE__{
    :institution_id => String.t,
    :name => String.t,
    :products => [ThePlaidAPI.Model.Products.t],
    :country_codes => [ThePlaidAPI.Model.CountryCode.t],
    :url => String.t | nil,
    :primary_color => String.t | nil,
    :logo => String.t | nil,
    :routing_numbers => [String.t],
    :dtc_numbers => [String.t] | nil,
    :oauth => boolean(),
    :status => ThePlaidAPI.Model.InstitutionStatus.t | nil,
    :payment_initiation_metadata => ThePlaidAPI.Model.PaymentInitiationMetadata.t | nil,
    :auth_metadata => ThePlaidAPI.Model.AuthMetadata.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.Institution do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:products, :list, ThePlaidAPI.Model.Products, options)
    |> deserialize(:country_codes, :list, ThePlaidAPI.Model.CountryCode, options)
    |> deserialize(:status, :struct, ThePlaidAPI.Model.InstitutionStatus, options)
    |> deserialize(:payment_initiation_metadata, :struct, ThePlaidAPI.Model.PaymentInitiationMetadata, options)
    |> deserialize(:auth_metadata, :struct, ThePlaidAPI.Model.AuthMetadata, options)
  end
end

