# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.FdxNotification do
  @moduledoc """
  Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload
  """

  @derive [Poison.Encoder]
  defstruct [
    :notificationId,
    :type,
    :sentOn,
    :category,
    :severity,
    :priority,
    :publisher,
    :subscriber,
    :notificationPayload,
    :url
  ]

  @type t :: %__MODULE__{
    :notificationId => String.t,
    :type => ThePlaidAPI.Model.FdxNotificationType.t,
    :sentOn => DateTime.t,
    :category => ThePlaidAPI.Model.FdxNotificationCategory.t,
    :severity => ThePlaidAPI.Model.FdxNotificationSeverity.t | nil,
    :priority => ThePlaidAPI.Model.FdxNotificationPriority.t | nil,
    :publisher => ThePlaidAPI.Model.FdxParty.t,
    :subscriber => ThePlaidAPI.Model.FdxParty.t | nil,
    :notificationPayload => ThePlaidAPI.Model.FdxNotificationPayload.t,
    :url => ThePlaidAPI.Model.FdxHateoasLink.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.FdxNotification do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:type, :struct, ThePlaidAPI.Model.FdxNotificationType, options)
    |> deserialize(:category, :struct, ThePlaidAPI.Model.FdxNotificationCategory, options)
    |> deserialize(:severity, :struct, ThePlaidAPI.Model.FdxNotificationSeverity, options)
    |> deserialize(:priority, :struct, ThePlaidAPI.Model.FdxNotificationPriority, options)
    |> deserialize(:publisher, :struct, ThePlaidAPI.Model.FdxParty, options)
    |> deserialize(:subscriber, :struct, ThePlaidAPI.Model.FdxParty, options)
    |> deserialize(:notificationPayload, :struct, ThePlaidAPI.Model.FdxNotificationPayload, options)
    |> deserialize(:url, :struct, ThePlaidAPI.Model.FdxHateoasLink, options)
  end
end

