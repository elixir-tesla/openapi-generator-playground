# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.Credit1099 do
  @moduledoc """
  An object representing an end user's 1099 tax form
  """

  @derive [Poison.Encoder]
  defstruct [
    :document_id,
    :document_metadata,
    :form_1099_type,
    :recipient,
    :payer,
    :filer,
    :tax_year,
    :rents,
    :royalties,
    :other_income,
    :federal_income_tax_withheld,
    :fishing_boat_proceeds,
    :medical_and_healthcare_payments,
    :nonemployee_compensation,
    :substitute_payments_in_lieu_of_dividends_or_interest,
    :payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer,
    :crop_insurance_proceeds,
    :excess_golden_parachute_payments,
    :gross_proceeds_paid_to_an_attorney,
    :section_409a_deferrals,
    :section_409a_income,
    :state_tax_withheld,
    :state_tax_withheld_lower,
    :payer_state_number,
    :payer_state_number_lower,
    :state_income,
    :state_income_lower,
    :transactions_reported,
    :pse_name,
    :pse_telephone_number,
    :gross_amount,
    :card_not_present_transaction,
    :merchant_category_code,
    :number_of_payment_transactions,
    :january_amount,
    :february_amount,
    :march_amount,
    :april_amount,
    :may_amount,
    :june_amount,
    :july_amount,
    :august_amount,
    :september_amount,
    :october_amount,
    :november_amount,
    :december_amount,
    :primary_state,
    :secondary_state,
    :primary_state_id,
    :secondary_state_id,
    :primary_state_income_tax,
    :secondary_state_income_tax
  ]

  @type t :: %__MODULE__{
    :document_id => String.t | nil,
    :document_metadata => ThePlaidAPI.Model.CreditDocumentMetadata.t | nil,
    :form_1099_type => ThePlaidAPI.Model.Form1099Type.t | nil,
    :recipient => ThePlaidAPI.Model.Credit1099Recipient.t | nil,
    :payer => ThePlaidAPI.Model.Credit1099Payer.t | nil,
    :filer => ThePlaidAPI.Model.Credit1099Filer.t | nil,
    :tax_year => String.t | nil,
    :rents => float() | nil,
    :royalties => float() | nil,
    :other_income => float() | nil,
    :federal_income_tax_withheld => float() | nil,
    :fishing_boat_proceeds => float() | nil,
    :medical_and_healthcare_payments => float() | nil,
    :nonemployee_compensation => float() | nil,
    :substitute_payments_in_lieu_of_dividends_or_interest => float() | nil,
    :payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer => String.t | nil,
    :crop_insurance_proceeds => float() | nil,
    :excess_golden_parachute_payments => float() | nil,
    :gross_proceeds_paid_to_an_attorney => float() | nil,
    :section_409a_deferrals => float() | nil,
    :section_409a_income => float() | nil,
    :state_tax_withheld => float() | nil,
    :state_tax_withheld_lower => float() | nil,
    :payer_state_number => String.t | nil,
    :payer_state_number_lower => String.t | nil,
    :state_income => float() | nil,
    :state_income_lower => float() | nil,
    :transactions_reported => String.t | nil,
    :pse_name => String.t | nil,
    :pse_telephone_number => String.t | nil,
    :gross_amount => float() | nil,
    :card_not_present_transaction => float() | nil,
    :merchant_category_code => String.t | nil,
    :number_of_payment_transactions => String.t | nil,
    :january_amount => float() | nil,
    :february_amount => float() | nil,
    :march_amount => float() | nil,
    :april_amount => float() | nil,
    :may_amount => float() | nil,
    :june_amount => float() | nil,
    :july_amount => float() | nil,
    :august_amount => float() | nil,
    :september_amount => float() | nil,
    :october_amount => float() | nil,
    :november_amount => float() | nil,
    :december_amount => float() | nil,
    :primary_state => String.t | nil,
    :secondary_state => String.t | nil,
    :primary_state_id => String.t | nil,
    :secondary_state_id => String.t | nil,
    :primary_state_income_tax => float() | nil,
    :secondary_state_income_tax => float() | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.Credit1099 do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:document_metadata, :struct, ThePlaidAPI.Model.CreditDocumentMetadata, options)
    |> deserialize(:form_1099_type, :struct, ThePlaidAPI.Model.Form1099Type, options)
    |> deserialize(:recipient, :struct, ThePlaidAPI.Model.Credit1099Recipient, options)
    |> deserialize(:payer, :struct, ThePlaidAPI.Model.Credit1099Payer, options)
    |> deserialize(:filer, :struct, ThePlaidAPI.Model.Credit1099Filer, options)
  end
end

