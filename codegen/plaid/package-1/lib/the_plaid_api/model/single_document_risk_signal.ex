# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.SingleDocumentRiskSignal do
  @moduledoc """
  Object containing all risk signals and relevant metadata for a single document
  """

  @derive [Poison.Encoder]
  defstruct [
    :document_reference,
    :risk_signals,
    :risk_summary
  ]

  @type t :: %__MODULE__{
    :document_reference => ThePlaidAPI.Model.RiskSignalDocumentReference.t,
    :risk_signals => [ThePlaidAPI.Model.DocumentRiskSignal.t],
    :risk_summary => ThePlaidAPI.Model.DocumentRiskSummary.t
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.SingleDocumentRiskSignal do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:document_reference, :struct, ThePlaidAPI.Model.RiskSignalDocumentReference, options)
    |> deserialize(:risk_signals, :list, ThePlaidAPI.Model.DocumentRiskSignal, options)
    |> deserialize(:risk_summary, :struct, ThePlaidAPI.Model.DocumentRiskSummary, options)
  end
end

