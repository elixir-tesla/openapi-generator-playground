# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.CreditBankIncomeHistoricalSummary do
  @moduledoc """
  The end user's monthly summary for the income source(s).
  """

  @derive [Poison.Encoder]
  defstruct [
    :total_amount,
    :iso_currency_code,
    :unofficial_currency_code,
    :total_amounts,
    :start_date,
    :end_date,
    :transactions
  ]

  @type t :: %__MODULE__{
    :total_amount => float() | nil,
    :iso_currency_code => String.t | nil,
    :unofficial_currency_code => String.t | nil,
    :total_amounts => [ThePlaidAPI.Model.CreditAmountWithCurrency.t] | nil,
    :start_date => Date.t | nil,
    :end_date => Date.t | nil,
    :transactions => [ThePlaidAPI.Model.CreditBankIncomeTransaction.t] | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.CreditBankIncomeHistoricalSummary do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:total_amounts, :list, ThePlaidAPI.Model.CreditAmountWithCurrency, options)
    |> deserialize(:start_date, :date, nil, options)
    |> deserialize(:end_date, :date, nil, options)
    |> deserialize(:transactions, :list, ThePlaidAPI.Model.CreditBankIncomeTransaction, options)
  end
end

