# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.BankTransferEventListRequest do
  @moduledoc """
  Defines the request schema for `/bank_transfer/event/list`
  """

  @derive [Poison.Encoder]
  defstruct [
    :client_id,
    :secret,
    :start_date,
    :end_date,
    :bank_transfer_id,
    :account_id,
    :bank_transfer_type,
    :event_types,
    :count,
    :offset,
    :origination_account_id,
    :direction
  ]

  @type t :: %__MODULE__{
    :client_id => String.t | nil,
    :secret => String.t | nil,
    :start_date => DateTime.t | nil,
    :end_date => DateTime.t | nil,
    :bank_transfer_id => String.t | nil,
    :account_id => String.t | nil,
    :bank_transfer_type => ThePlaidAPI.Model.BankTransferEventListBankTransferType.t | nil,
    :event_types => [ThePlaidAPI.Model.BankTransferEventType.t] | nil,
    :count => integer() | nil,
    :offset => integer() | nil,
    :origination_account_id => String.t | nil,
    :direction => ThePlaidAPI.Model.BankTransferEventListDirection.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.BankTransferEventListRequest do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:bank_transfer_type, :struct, ThePlaidAPI.Model.BankTransferEventListBankTransferType, options)
    |> deserialize(:event_types, :list, ThePlaidAPI.Model.BankTransferEventType, options)
    |> deserialize(:direction, :struct, ThePlaidAPI.Model.BankTransferEventListDirection, options)
  end
end

