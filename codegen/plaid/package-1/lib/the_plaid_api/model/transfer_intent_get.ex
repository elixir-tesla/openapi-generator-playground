# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.TransferIntentGet do
  @moduledoc """
  Represents a transfer intent within Transfer UI.
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :created,
    :status,
    :transfer_id,
    :failure_reason,
    :authorization_decision,
    :authorization_decision_rationale,
    :account_id,
    :origination_account_id,
    :funding_account_id,
    :amount,
    :mode,
    :network,
    :ach_class,
    :user,
    :description,
    :metadata,
    :iso_currency_code,
    :require_guarantee,
    :guarantee_decision,
    :guarantee_decision_rationale
  ]

  @type t :: %__MODULE__{
    :id => String.t,
    :created => DateTime.t,
    :status => ThePlaidAPI.Model.TransferIntentStatus.t,
    :transfer_id => String.t | nil,
    :failure_reason => ThePlaidAPI.Model.TransferIntentGetFailureReason.t | nil,
    :authorization_decision => ThePlaidAPI.Model.TransferIntentAuthorizationDecision.t | nil,
    :authorization_decision_rationale => ThePlaidAPI.Model.TransferAuthorizationDecisionRationale.t | nil,
    :account_id => String.t | nil,
    :origination_account_id => String.t,
    :funding_account_id => String.t,
    :amount => String.t,
    :mode => ThePlaidAPI.Model.TransferIntentCreateMode.t,
    :network => ThePlaidAPI.Model.TransferIntentCreateNetwork.t | nil,
    :ach_class => ThePlaidAPI.Model.AchClass.t | nil,
    :user => ThePlaidAPI.Model.TransferUserInResponse.t,
    :description => String.t,
    :metadata => %{optional(String.t) => String.t} | nil,
    :iso_currency_code => String.t,
    :require_guarantee => boolean() | nil,
    :guarantee_decision => ThePlaidAPI.Model.TransferAuthorizationGuaranteeDecision.t | nil,
    :guarantee_decision_rationale => ThePlaidAPI.Model.TransferAuthorizationGuaranteeDecisionRationale.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.TransferIntentGet do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:status, :struct, ThePlaidAPI.Model.TransferIntentStatus, options)
    |> deserialize(:failure_reason, :struct, ThePlaidAPI.Model.TransferIntentGetFailureReason, options)
    |> deserialize(:authorization_decision, :struct, ThePlaidAPI.Model.TransferIntentAuthorizationDecision, options)
    |> deserialize(:authorization_decision_rationale, :struct, ThePlaidAPI.Model.TransferAuthorizationDecisionRationale, options)
    |> deserialize(:mode, :struct, ThePlaidAPI.Model.TransferIntentCreateMode, options)
    |> deserialize(:network, :struct, ThePlaidAPI.Model.TransferIntentCreateNetwork, options)
    |> deserialize(:ach_class, :struct, ThePlaidAPI.Model.AchClass, options)
    |> deserialize(:user, :struct, ThePlaidAPI.Model.TransferUserInResponse, options)
    |> deserialize(:guarantee_decision, :struct, ThePlaidAPI.Model.TransferAuthorizationGuaranteeDecision, options)
    |> deserialize(:guarantee_decision_rationale, :struct, ThePlaidAPI.Model.TransferAuthorizationGuaranteeDecisionRationale, options)
  end
end

