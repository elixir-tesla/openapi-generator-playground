# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.InvestmentTransaction do
  @moduledoc """
  A transaction within an investment account.
  """

  @derive [Poison.Encoder]
  defstruct [
    :investment_transaction_id,
    :cancel_transaction_id,
    :account_id,
    :security_id,
    :date,
    :name,
    :quantity,
    :amount,
    :price,
    :fees,
    :type,
    :subtype,
    :iso_currency_code,
    :unofficial_currency_code
  ]

  @type t :: %__MODULE__{
    :investment_transaction_id => String.t,
    :cancel_transaction_id => String.t | nil,
    :account_id => String.t,
    :security_id => String.t | nil,
    :date => Date.t,
    :name => String.t,
    :quantity => float(),
    :amount => float(),
    :price => float(),
    :fees => float() | nil,
    :type => ThePlaidAPI.Model.InvestmentTransactionType.t,
    :subtype => ThePlaidAPI.Model.InvestmentTransactionSubtype.t,
    :iso_currency_code => String.t | nil,
    :unofficial_currency_code => String.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.InvestmentTransaction do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:date, :date, nil, options)
    |> deserialize(:type, :struct, ThePlaidAPI.Model.InvestmentTransactionType, options)
    |> deserialize(:subtype, :struct, ThePlaidAPI.Model.InvestmentTransactionSubtype, options)
  end
end

