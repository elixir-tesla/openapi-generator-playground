# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ThePlaidAPI.Model.AssetReportTransaction do
  @moduledoc """
  A transaction on the asset report
  """

  @derive [Poison.Encoder]
  defstruct [
    :account_id,
    :amount,
    :iso_currency_code,
    :unofficial_currency_code,
    :category,
    :category_id,
    :check_number,
    :date,
    :location,
    :name,
    :merchant_name,
    :original_description,
    :payment_meta,
    :pending,
    :pending_transaction_id,
    :account_owner,
    :transaction_id,
    :transaction_type,
    :logo_url,
    :website,
    :date_transacted,
    :credit_category
  ]

  @type t :: %__MODULE__{
    :account_id => String.t,
    :amount => float(),
    :iso_currency_code => String.t | nil,
    :unofficial_currency_code => String.t | nil,
    :category => [String.t] | nil,
    :category_id => String.t | nil,
    :check_number => String.t | nil,
    :date => Date.t,
    :location => ThePlaidAPI.Model.Location.t | nil,
    :name => String.t | nil,
    :merchant_name => String.t | nil,
    :original_description => String.t | nil,
    :payment_meta => ThePlaidAPI.Model.PaymentMeta.t | nil,
    :pending => boolean(),
    :pending_transaction_id => String.t | nil,
    :account_owner => String.t | nil,
    :transaction_id => String.t,
    :transaction_type => String.t | nil,
    :logo_url => String.t | nil,
    :website => String.t | nil,
    :date_transacted => String.t | nil,
    :credit_category => ThePlaidAPI.Model.CreditCategory.t | nil
  }
end

defimpl Poison.Decoder, for: ThePlaidAPI.Model.AssetReportTransaction do
  import ThePlaidAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:date, :date, nil, options)
    |> deserialize(:location, :struct, ThePlaidAPI.Model.Location, options)
    |> deserialize(:payment_meta, :struct, ThePlaidAPI.Model.PaymentMeta, options)
    |> deserialize(:credit_category, :struct, ThePlaidAPI.Model.CreditCategory, options)
  end
end

